version: '3.8'

networks:
    spring-cloud-network:
        driver: bridge

volumes:
    mongodb_data_container:
    postgres_data:
        driver: local

services:

    ############
    # MONGO DB #
    ############
    xis-cv-mongodb:
        container_name: xis-cv-mongodb
        image: mongo:latest
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: username
            MONGO_INITDB_ROOT_PASSWORD: password
        ports:
            - 27017:27017
        volumes:
            - mongodb_data_container:/data
        deploy:
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3
                window: 120s

    ############
    # POSTGRES #
    ############
    xis-keycloak-postgres:
        container_name: xis-keycloak-postgres
        image: postgres:16
        volumes:
            - postgres_data:/var/lib/postgresql/data
        environment:
            POSTGRES_DB: keycloakdb
            POSTGRES_USER: keycloakdbuser
            POSTGRES_PASSWORD: EqhvLbsPhrkkZjcaGWcV7qT
        ports:
            - "5432:5432"
        networks:
            - spring-cloud-network
        deploy:
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3
                window: 120s

    ############
    # KEYCLOAK #
    ############
    xis-keycloak:
        container_name: xis-keycloak
        image: bitnami/keycloak:22.0.1
        environment:
            KEYCLOAK_DATABASE_VENDOR: postgresql
            KEYCLOAK_DATABASE_HOST: xis-keycloak-postgres
            KEYCLOAK_DATABASE_PORT: 5432
            KEYCLOAK_DATABASE_NAME: ${KEYCLOAK_DB_NAME}
            KEYCLOAK_DATABASE_USER: ${KEYCLOAK_DB_USER}
            KEYCLOAK_DATABASE_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
            KEYCLOAK_DATABASE_SCHEMA: public
            KEYCLOAK_ADMIN_USER: ${KEYCLOAK_ADMIN_USERNAME}
            KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
            KEYCLOAK_ENABLE_HEALTH_ENDPOINTS: 'true'
            KEYCLOAK_ENABLE_STATISTICS: 'true'
            KC_HOSTNAME: localhost:28080
            KC_HOSTNAME_STRICT: 'false'
            KC_HOSTNAME_STRICT_HTTPS: 'false'
            KC_HTTP_ENABLED: 'true'
        ports:
            - "28080:8080"
        networks:
            - spring-cloud-network
        depends_on:
            - xis-keycloak-postgres
        deploy:
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3
                window: 120s

    ####################################
    # SPRING BOOT CONFIGURATION SERVER #
    ####################################
    xis-cv-configuration-server:
        container_name: xis-cv-configuration-server
        image: xaviiborra/xis-cv-configuration-server:1.0.0
        ports:
            - 8888:8888
        networks:
            - spring-cloud-network
        deploy:
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3
                window: 120s

    ####################################
    # SPRING BOOT EUREKA SERVER #
    ####################################
    xis-cv-eureka-server:
        container_name: xis-cv-eureka-server
        image: xaviiborra/xis-cv-eureka-server:1.0.0
        ports:
            - 8761:8761
        networks:
            - spring-cloud-network
        depends_on:
            - xis-cv-configuration-server
        deploy:
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3
                window: 120s

    ####################################
    # SPRING BOOT API GATEWAY #
    ####################################
    xis-cv-gateway:
        container_name: xis-cv-gateway
        image: xaviiborra/xis-cv-gateway:1.0.0
        ports:
            - 8080:8080
        networks:
            - spring-cloud-network
        depends_on:
            - xis-cv-configuration-server
            - xis-cv-eureka-server
        deploy:
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3
                window: 120s
